#======================================================
# START PRINT
#======================================================

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}

    # Set temporary bed temp for homing and wait
    M190 S50
    M118 Heating Bed [Wait Until 50째]
    # Set final bed temp but don't wait for it
    M140 S{BED_TEMP}
    # Set temporary nozzle temp to prevent oozing during homing but not wait for it
    M104 S150
    M118 Heating Nozzle [Wait Until 150째]
    # Allow partial nozzle warmup (10s)
    G4 S10

    # Load mesh profile default
    BED_MESH_PROFILE LOAD="default"
    M118 Load Deafult Bed Mesh
    # Home the printer
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    # Use absolute coordinates
    G90
    #Mesh printing area (Adaptive Meshing)
    MESH_BED_ADAPTIVE MIN_BED_TEMP={BED_TEMP}
    # Go to starting position
    #G0 Z50 F240
    #G0 X0 Y0 F3000
    SMART_PARK
    # Set final nozzle temp
    M104 S{EXTRUDER_TEMP}
    # Wait for bed temp to stabilize
    M190 S{BED_TEMP}
    M118 Heating Bed [Wait Until {BED_TEMP}째]
    # Wait for nozzle temp to stabilize
    M109 S{EXTRUDER_TEMP}
    M118 Heating Bed [Wait Until {EXTRUDER_TEMP}째]
    
    # Adaptive Purge Line
    LINE_PURGE
    M118 Printing started

#======================================================
# END PRINT
#======================================================

[gcode_macro END_PRINT]
gcode:
    #Incremental Coordinates Mode
    G91
    # Move nozzle away from print while retracting
    G1 X-2 Y-2 E-0.5 Z5 F300
    # Raise nozzle by 5mm
    G0 Z5 F3000
    #Absolute Coordinates Mode
    G90
    G0 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F3000
    # Disable steppers
    M84 X Y E
    # Turn heaters and fan off
    M140 S0
    M104 S0
    M107
    M118 Print completed

#======================================================
# LOAD FILAMENT
#======================================================

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M118 Loading Filament
    M83
    LOW_TEMP_CHECK_NOZZLE
    G91
    #
    G1 E75 F1500 ## Adjust to the point that the filament just hits the hotend #!#
    G1 E15 F300 ## Slower extrusion to move filament trough hotend
    G1 E-5 F400 ## Small retraction to prevent oozing
    G90
    RESTORE_GCODE_STATE NAME=loading_filament

#======================================================
# UNLOAD FILAMENT
#======================================================

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M118 Unloading Filament 
    LOW_TEMP_CHECK_NOZZLE
    G91 
    G1 E10 F600 ## Small extrude to make sure the filament is loose in the hotend
    G1 E-100 F1500 ## length to retract filament out
    G90
    RESTORE_GCODE_STATE NAME=unloading_filament

#======================================================
# Heat Chamber
#======================================================

[gcode_macro HEAT_CHAMBER]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  G90
  G1 X110 Y0 F10000 # Change to a suitable location where the hotend and heatbed has the bes chance of spreading heat.
  G1 Z50 F5000
  SET_FAN_SPEED FAN=chamber SPEED=1 # this asumes you have a fan called "chamber" set up on your printer. disable if you do not have one.
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
  M106 S255
  G4 S1800

# this is how I have my fan and thermistor set up:

# [temperature_sensor chamber]
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: expander:PA6
# min_temp: 0
# max_temp: 100
# gcode_id: C

# [fan_generic chamber]
# pin: PC6

# For this to work the best, add this to your printer.cfg:

# [idle_timeout]
# timeout: 1800 # timeout in seconds (1800 = 30 minutes)


#=====================================================
# PARK TOOLHEAD
#=====================================================

[gcode_macro PARKTOOL]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKTOOL
    G90                              ; absolute positioning
    {% if printer.toolhead.position.z+2 <= printer.toolhead.axis_maximum.z %}
		G0 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} Z{printer.toolhead.position.z+2} F6000
    {% else %}
        G0 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} Z{printer.toolhead.axis_maximum.z-1} F6000
	{% endif %}
        
    RESTORE_GCODE_STATE NAME=PARKTOOL

#=====================================================
# PAUSE PRINT
#=====================================================

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000   ; park toolhead at back left
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

#=====================================================
# RESUME PRINT
#=====================================================

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #INITIAL_RGB                                                                 ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

#=====================================================
# CANCEL PRINT
#=====================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    END_PRINT
    BASE_CANCEL_PRINT

#=====================================================
# M106 Set Fan Speed
#=====================================================

[gcode_macro M106]
gcode:
    {% if params.P is defined %}
        {% if params.S is defined %}
            {% if params.S|int == 255 %}
                {% set realspeed = 1 %}
            {% else %}
                {% if params.S|int == 0 %}
                    {% set realspeed = 0 %}
                {% else %}
                    {% set realspeed = '%.2f' | format(0.003921*params.S|float) %}
                {% endif %}
            {% endif %}
            {% if params.P|int == 0 %}
                SET_FAN_SPEED FAN=part_cooling_fan SPEED={realspeed}
            {% endif %}
            {% if params.P|int == 1 %}
                #SET_FAN_SPEED FAN=aux_cooling_fan SPEED={realspeed} #If aux_cooling_fan exists
            {% endif %}
        {% else %}
            {% if params.P|int == 0 %}
                SET_FAN_SPEED FAN=part_cooling_fan SPEED=1
            {% endif %}
            {% if params.P|int == 1 %}
                #SET_FAN_SPEED FAN=aux_cooling_fan SPEED=1 #If aux_cooling_fan exists
            {% endif %}
        {% endif %}
    {% else %}
        {% if params.S is defined %}
            {% if params.S|int == 255 %}
                {% set realspeed = 1 %}
            {% else %}
                {% if params.S|int == 0 %}
                    {% set realspeed = 0 %}
                {% else %}
                    {% set realspeed = '%.2f' | format(0.003921*params.S|float) %}
                {% endif %}
            {% endif %}
            SET_FAN_SPEED FAN=part_cooling_fan SPEED={realspeed}
        {% else %}
            SET_FAN_SPEED FAN=part_cooling_fan SPEED=1      
        {% endif %}
    {% endif %}

#=====================================================
# M107 Fan Off
#=====================================================

[gcode_macro M107]
gcode:
    {% if params.P is defined %}
        SET_FAN_SPEED FAN=extruder{params.P|int}_partfan SPEED=0
        {% if params.P|int == 0 %}
            SET_FAN_SPEED FAN=part_cooling_fan SPEED=0
        {% endif %}
        {% if params.P|int == 1 %}
            #SET_FAN_SPEED FAN=aux_cooling_fan SPEED=0 #If aux_cooling_fan exists
        {% endif %}
    {% else %}
        SET_FAN_SPEED FAN=part_cooling_fan SPEED=0
        #SET_FAN_SPEED FAN=aux_cooling_fan SPEED=0 #If aux_cooling_fan exists     
    {% endif %} 

#=====================================================
# SAVE CONFIG clean
#=====================================================

[gcode_macro SAVE_CONFIG]
rename_existing: _SAVE_CONFIG
description: SAVE_CONFIG macro
gcode:
    #PARK_TOOLHEAD
    PARKTOOL
    #PARK_BED
    _SAVE_CONFIG

[gcode_macro SAVE_RESTART]
description: cleaner SAVE_CONFIG macro
gcode:
    SAVE_CONFIG